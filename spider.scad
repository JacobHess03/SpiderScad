
// --------------------------- PARAMETRES ------------------------------
// WRITE YOUR NAME HERE
word = "GWEN";
// Scale factor for the whole word
scale_factor = 0.8;    
// Spacing between letters
spacing = 2;
// Thickness of the letters           
thickness = 10;         
// --------------------------- RENDERING ------------------------------
// Outline thickness for the brim
outline_thickness_val = 8; 
// Height of the letters
letter_height_val = -3; 
outline_height_val = max(thickness, 11);

// ----------------------------- GLYPHS -----------------------------

module glyph_A() {
    union() {
        polygon(points = [
            [78.388, -31.861],
            [74.401, -28.870],
            [74.019, -28.010],
            [69.985, -6.525],
            [69.248, -5.897],
            [59.280, -5.897],
            [58.754, -6.508],
            [57.786, -10.374],
            [53.935, -34.985],
            [53.029, -36.566],
            [52.299, -35.888],
            [51.632, -28.998],
            [51.433, -28.047],
            [50.448, -26.351],
            [50.352, -22.391],
            [48.795, -19.837],
            [48.718, -14.887],
            [50.153, -7.047],
            [48.658, -1.257],
            [47.790, 0.538],
            [48.233, 1.001],
            [51.096, 1.664],
            [52.647, 11.511],
            [54.625, 21.281],
            [54.634, 22.245],
            [53.336, 26.016],
            [51.577, 28.314],
            [51.789, 29.099],
            [71.726, 29.099],
            [72.617, 28.928],
            [73.424, 27.117],
            [77.599, 1.623],
            [80.514, 0.955],
            [80.857, 0.232],
            [80.653, -1.713],
            [78.400, -6.159],
            [78.353, -7.111],
            [82.505, -33.702],
            [82.551, -36.688],
            [81.736, -36.871],
            [80.939, -36.388],
            [79.529, -34.978],
            [79.129, -34.085],
            [68.452, 1.581],
            [66.264, 12.326],
            [64.577, 24.168],
            [64.231, 25.052],
            [63.027, 25.848],
            [59.365, 2.209],
            [59.630, 1.558],
            [68.581, 0.947],
            [78.388, -31.861],
        ]);
    }
}

module glyph_B() {
    union() {
        polygon(points = [
            [59.797, -32.990],
            [57.644, -30.907],
            [57.609, -20.937],
            [53.654, -18.168],
            [53.027, 26.759],
            [49.566, 27.873],
            [49.566, 30.868],
            [49.002, 32.739],
            [49.336, 33.403],
            [74.298, 33.403],
            [75.159, 33.069],
            [79.975, 28.075],
            [79.975, 15.095],
            [79.645, 14.209],
            [77.197, 11.054],
            [77.009, 10.260],
            [79.973, 6.242],
            [79.425, -17.714],
            [79.183, -18.641],
            [70.603, -30.917],
            [69.876, -31.438],
            [64.884, -31.438],
            [60.164, -36.362],
            [59.260, -36.588],
            [58.703, -36.269],
            [63.140, -24.144],
            [65.964, -21.319],
            [67.843, -17.814],
            [72.158, -12.320],
            [72.497, -11.440],
            [72.497, 3.538],
            [71.767, 6.215],
            [68.916, 3.423],
            [62.354, -1.130],
            [62.233, -23.997],
            [60.756, 8.144],
            [62.632, 8.515],
            [71.570, 14.878],
            [71.932, 15.653],
            [71.597, 17.550],
            [70.196, 20.142],
            [69.551, 27.053],
            [60.564, 27.053],
            [60.502, 8.144],
            [59.797, -32.990],
        ]);
    }
}

module glyph_C() {
    union() {
        polygon(points = [
            [74.402, -31.579],
            [71.922, -27.268],
            [63.654, -21.733],
            [63.089, -20.949],
            [49.523, 5.632],
            [49.143, 6.527],
            [49.143, 9.512],
            [55.577, 18.303],
            [57.649, 21.665],
            [63.948, 28.029],
            [66.720, 33.262],
            [79.654, 33.262],
            [79.815, 32.608],
            [78.788, 28.769],
            [75.685, 21.440],
            [74.408, 24.075],
            [72.978, 25.457],
            [72.267, 25.413],
            [65.936, 19.081],
            [60.046, 7.577],
            [59.852, 6.687],
            [72.952, -20.132],
            [80.041, -35.477],
            [79.941, -36.302],
            [79.182, -36.536],
            [78.301, -36.074],
            [75.041, -32.341],
            [74.402, -31.579],
        ]);
    }
}

module glyph_D() {
    union() {
        polygon(points = [
            [60.326, -33.625],
            [58.666, -31.135],
            [58.491, -30.190],
            [58.491, -21.213],
            [55.155, -19.028],
            [55.023, -18.097],
            [54.477, 22.798],
            [54.208, 23.701],
            [52.303, 26.010],
            [51.958, 28.901],
            [51.512, 29.793],
            [51.806, 30.228],
            [73.751, 30.228],
            [78.279, 23.758],
            [78.529, 22.836],
            [78.529, -17.064],
            [69.965, -31.647],
            [65.019, -31.720],
            [63.486, -34.133],
            [61.370, -36.249],
            [60.630, -36.871],
            [59.633, -36.871],
            [59.381, -36.340],
            [63.161, -24.722],
            [65.953, -21.879],
            [68.210, -17.432],
            [72.250, -11.794],
            [72.250, 13.144],
            [72.129, 14.104],
            [70.476, 16.581],
            [69.885, 23.539],
            [69.264, 23.948],
            [62.442, 23.788],
            [62.442, -24.093],
            [63.077, -24.806],
            [60.326, -33.625],
        ]);
    }
}

module glyph_E() {
    union() {
        polygon(points = [
            [59.373, -1.452],
            [57.115, 1.799],
            [57.115, 2.798],
            [56.183, 5.363],
            [59.119, 5.974],
            [59.373, 6.767],
            [59.283, 26.721],
            [53.660, 32.407],
            [53.094, 33.174],
            [53.158, 34.108],
            [75.149, 34.108],
            [76.112, 34.021],
            [76.819, 33.314],
            [77.263, 32.565],
            [76.816, 31.671],
            [72.708, 27.335],
            [68.768, 27.194],
            [68.616, 6.355],
            [69.286, 5.981],
            [77.263, 5.429],
            [77.788, 4.919],
            [77.538, 4.028],
            [74.070, -0.722],
            [69.180, -1.624],
            [69.180, -26.613],
            [76.080, -26.711],
            [76.589, -27.201],
            [76.589, -28.200],
            [75.345, -29.699],
            [74.545, -30.168],
            [72.551, -30.181],
            [68.008, -34.096],
            [66.347, -33.029],
            [64.429, -33.156],
            [60.895, -36.690],
            [59.512, -34.405],
            [59.373, -2.451],
            [59.373, -1.452],
        ]);
    }
}

module glyph_F() {
    union() {
        polygon(points = [
            [61.349, -29.321],
            [60.737, -27.426],
            [58.752, -23.982],
            [58.510, -23.048],
            [57.902, -2.147],
            [55.718, 1.116],
            [55.497, 3.046],
            [54.584, 4.816],
            [57.261, 5.543],
            [57.892, 6.026],
            [57.892, 25.940],
            [57.428, 26.746],
            [51.827, 32.410],
            [51.612, 33.317],
            [52.170, 33.756],
            [60.135, 33.756],
            [65.075, 34.320],
            [78.019, 34.320],
            [77.368, 29.528],
            [74.473, 20.002],
            [73.481, 19.997],
            [72.150, 24.714],
            [70.005, 26.794],
            [67.134, 26.744],
            [67.134, 5.834],
            [75.916, 5.067],
            [76.307, 4.435],
            [73.169, -0.489],
            [72.486, -1.093],
            [67.696, -2.062],
            [67.029, -36.800],
            [66.033, -36.800],
            [64.596, -35.461],
            [61.794, -30.212],
            [61.349, -29.321],
        ]);
    }
}

module glyph_G() {
    union() {
        polygon(points = [
            [59.197, -33.766],
            [57.536, -31.275],
            [57.362, -30.329],
            [57.361, -21.347],
            [54.018, -19.164],
            [53.345, 26.683],
            [51.135, 29.927],
            [49.977, 33.638],
            [50.780, 34.108],
            [60.760, 34.103],
            [62.624, 33.639],
            [66.584, 34.108],
            [79.559, 34.108],
            [76.899, 23.493],
            [75.193, 19.889],
            [74.490, 20.092],
            [73.111, 24.888],
            [72.567, 25.624],
            [68.915, 27.220],
            [68.159, 27.829],
            [61.384, 27.617],
            [61.384, -24.283],
            [61.992, -25.045],
            [62.575, -24.606],
            [67.449, -17.072],
            [71.042, -12.281],
            [71.121, 7.654],
            [70.861, 8.545],
            [67.332, 12.074],
            [67.099, 12.975],
            [67.637, 13.436],
            [77.618, 13.436],
            [77.965, 12.785],
            [77.965, -7.177],
            [77.364, -8.938],
            [76.605, -18.841],
            [68.902, -31.678],
            [64.015, -31.861],
            [63.362, -32.420],
            [62.445, -34.187],
            [59.622, -37.010],
            [58.624, -37.012],
            [58.213, -36.594],
            [58.869, -34.709],
            [59.197, -33.766],
        ]);
    }
}

module glyph_H() {
    union() {
        polygon(points = [
            [79.376, -32.990],
            [79.376, -29.991],
            [75.033, -24.597],
            [74.777, -23.687],
            [74.061, 3.135],
            [59.066, 3.135],
            [58.703, 2.498],
            [58.661, -36.447],
            [57.661, -36.447],
            [55.085, -33.497],
            [54.681, -32.638],
            [54.681, -29.639],
            [54.380, -28.748],
            [50.089, -23.302],
            [49.540, 2.684],
            [48.320, 3.973],
            [47.164, 7.800],
            [46.293, 9.600],
            [46.788, 10.042],
            [49.531, 10.811],
            [49.531, 23.806],
            [49.252, 24.705],
            [46.686, 27.772],
            [45.531, 32.415],
            [58.527, 32.415],
            [59.253, 10.605],
            [59.711, 10.049],
            [73.707, 10.049],
            [74.225, 10.530],
            [74.225, 23.526],
            [70.768, 28.259],
            [70.822, 32.203],
            [82.819, 32.203],
            [83.397, 31.783],
            [83.397, -36.196],
            [83.214, -37.012],
            [82.214, -37.012],
            [80.796, -35.609],
            [79.812, -33.889],
            [79.376, -32.990],
        ]);
    }
}

module glyph_I() {
    union() {
        translate([-5, 0, 0]){
        polygon(points = [
            [66.464, -30.379],
            [62.599, -25.837],
            [62.432, -24.900],
            [61.819, 16.825],
            [59.463, 19.991],
            [58.554, 22.818],
            [58.902, 23.583],
            [59.861, 23.666],
            [69.802, 23.666],
            [69.921, -36.851],
            [69.229, -37.153],
            [68.456, -36.745],
            [66.825, -34.248],
            [66.464, -33.362],
            [66.464, -31.373],
            [66.464, -30.379],
        ]);
        }
    }
}

module glyph_J() {
    union() {
        polygon(points = [
            [61.067, -25.793],
            [62.195, -21.992],
            [62.195, 27.774],
            [59.963, 30.972],
            [59.009, 34.661],
            [59.853, 35.026],
            [69.806, 35.026],
            [70.239, 34.463],
            [70.170, -25.227],
            [66.651, -28.746],
            [64.911, -29.615],
            [57.726, -34.845],
            [53.155, -36.659],
            [52.159, -36.659],
            [51.917, -34.943],
            [60.363, -26.497],
            [61.067, -25.793],
        ]);
    }
}

module glyph_L() {
    union() {
        polygon(points = [
            [56.551, 24.442],
            [53.569, 28.396],
            [52.634, 31.219],
            [53.037, 31.998],
            [63.971, 32.062],
            [64.757, -25.457],
            [73.274, -22.640],
            [78.231, -22.477],
            [78.917, -22.787],
            [78.791, -23.732],
            [76.631, -25.766],
            [73.743, -26.522],
            [68.810, -31.455],
            [65.951, -32.169],
            [63.684, -34.018],
            [61.915, -34.834],
            [59.757, -36.800],
            [57.763, -36.800],
            [56.551, -35.358],
            [56.551, 23.446],
            [56.551, 24.442],
        ]);
    }
}

module glyph_M() {
    union() {
        polygon(points = [
            [54.964, -31.649],
            [52.421, -30.060],
            [51.220, -27.386],
            [49.430, -24.980],
            [49.248, -24.040],
            [49.248, 16.942],
            [47.574, 21.641],
            [45.791, 24.044],
            [45.791, 25.043],
            [54.683, 25.148],
            [55.637, 25.039],
            [56.344, 24.332],
            [57.033, 23.613],
            [65.127, 5.333],
            [67.104, 3.572],
            [69.988, 12.092],
            [73.794, 21.325],
            [73.943, 24.295],
            [74.230, 25.007],
            [83.227, 25.007],
            [83.704, 24.619],
            [82.473, 19.801],
            [81.922, -36.172],
            [81.544, -36.800],
            [80.544, -36.800],
            [79.648, -35.041],
            [79.074, -31.084],
            [75.369, -25.186],
            [75.072, -24.276],
            [75.072, 2.713],
            [74.141, 2.782],
            [73.638, 1.054],
            [72.275, -1.617],
            [69.690, -9.176],
            [66.984, -14.528],
            [66.274, -14.998],
            [65.381, -14.869],
            [64.633, -10.941],
            [59.420, 2.022],
            [58.941, 2.782],
            [58.414, 2.302],
            [57.858, -36.677],
            [56.979, -36.800],
            [56.222, -36.486],
            [55.215, -32.617],
            [54.964, -31.649],
        ]);
    }
}

module glyph_N() {
    union() {
        polygon(points = [
            [55.845, -30.662],
            [51.965, -24.926],
            [51.965, 21.934],
            [51.864, 22.900],
            [50.811, 24.580],
            [50.270, 27.522],
            [48.861, 28.793],
            [48.508, 29.601],
            [48.948, 30.157],
            [58.860, 30.061],
            [60.164, 27.378],
            [67.334, 3.509],
            [68.649, 0.822],
            [69.328, 0.312],
            [69.745, 0.892],
            [69.745, 26.814],
            [69.401, 27.665],
            [67.981, 29.054],
            [67.981, 30.051],
            [79.838, 30.157],
            [80.610, 29.932],
            [80.525, 25.964],
            [78.917, 22.356],
            [78.917, -35.471],
            [78.261, -35.812],
            [77.264, -35.812],
            [76.606, -35.270],
            [74.414, -29.719],
            [73.839, -28.974],
            [72.172, -27.880],
            [71.371, -25.053],
            [68.132, -21.375],
            [60.627, 1.346],
            [59.750, 1.512],
            [59.373, 0.891],
            [59.319, -36.941],
            [58.322, -36.941],
            [57.039, -35.502],
            [56.084, -31.630],
            [55.845, -30.662],
        ]);
    }
}

module glyph_O() {
    union() {
        polygon(points = [
            [55.916, -31.156],
            [53.097, -28.337],
            [53.023, -27.370],
            [53.023, 19.472],
            [53.169, 20.424],
            [55.723, 24.691],
            [56.481, 25.077],
            [73.424, 25.077],
            [78.128, 18.786],
            [78.282, 17.842],
            [78.282, -19.034],
            [68.439, -28.896],
            [65.318, -31.318],
            [63.524, -32.188],
            [62.404, -33.777],
            [59.614, -36.625],
            [58.720, -36.871],
            [57.790, -36.778],
            [56.214, -32.051],
            [62.651, -25.187],
            [68.314, -18.233],
            [70.142, -14.702],
            [70.258, -13.728],
            [71.011, 17.159],
            [67.528, 18.798],
            [62.545, 18.798],
            [62.185, 18.150],
            [61.496, -23.703],
            [62.619, -25.229],
            [55.916, -31.156],
        ]);
    }
}

module glyph_P() {
    union() {
        polygon(points = [
            [53.764, -34.683],
            [53.764, 17.243],
            [53.548, 18.061],
            [50.601, 18.603],
            [49.742, 24.223],
            [75.557, 24.372],
            [80.502, 19.435],
            [80.716, 18.525],
            [80.716, 1.549],
            [74.214, -4.572],
            [72.800, -3.272],
            [72.098, -3.164],
            [70.009, -5.311],
            [61.236, -11.797],
            [60.693, -25.767],
            [58.538, -29.039],
            [57.717, -33.964],
            [57.183, -34.711],
            [53.869, -36.941],
            [53.222, -36.377],
            [62.055, -1.464],
            [70.927, 5.012],
            [72.714, 5.853],
            [73.237, 6.474],
            [73.237, 17.459],
            [72.802, 18.022],
            [61.818, 18.022],
            [61.062, 0.073],
            [61.201, -0.859],
            [61.878, -1.593],
            [53.764, -34.683],
        ]);
    }
}

module glyph_Q() {
    union() {
        polygon(points = [
            [73.484, -29.603],
            [68.346, -26.533],
            [67.462, -26.643],
            [62.384, -29.687],
            [61.321, -31.325],
            [58.499, -34.146],
            [57.578, -34.331],
            [56.705, -34.157],
            [54.754, -28.515],
            [51.965, -25.700],
            [51.965, 22.186],
            [52.248, 23.097],
            [54.751, 27.397],
            [55.610, 27.617],
            [72.570, 27.617],
            [77.199, 21.158],
            [77.224, -15.746],
            [77.057, -16.683],
            [73.888, -20.536],
            [73.824, -21.404],
            [78.900, -35.482],
            [78.917, -36.476],
            [78.102, -36.659],
            [77.305, -36.175],
            [75.250, -34.018],
            [73.768, -30.313],
            [60.806, -22.336],
            [61.803, -22.336],
            [63.616, -20.010],
            [63.926, -19.166],
            [62.175, -14.496],
            [67.936, -13.741],
            [69.187, -12.317],
            [69.940, 18.600],
            [69.744, 19.512],
            [68.359, 20.948],
            [67.497, 21.267],
            [62.509, 21.267],
            [60.699, 20.484],
            [60.573, -22.336],
            [73.484, -29.603],
        ]);
    }
}

module glyph_R() {
    union() {
        polygon(points = [
            [55.246, -27.628],
            [54.596, -25.745],
            [51.786, -21.654],
            [51.229, 25.306],
            [50.644, 25.835],
            [47.710, 26.452],
            [47.202, 27.039],
            [47.600, 27.874],
            [49.062, 29.170],
            [50.986, 29.209],
            [49.337, 31.713],
            [49.688, 32.062],
            [70.672, 32.062],
            [71.807, 30.431],
            [75.211, 28.365],
            [75.855, 25.466],
            [76.645, 23.639],
            [76.628, 22.724],
            [74.005, 16.241],
            [69.761, 7.196],
            [69.569, 3.244],
            [82.150, -31.517],
            [82.198, -32.507],
            [81.470, -32.778],
            [80.643, -32.420],
            [78.163, -29.288],
            [76.511, -25.718],
            [70.695, -21.835],
            [59.856, 3.911],
            [58.857, 3.911],
            [58.703, -35.904],
            [58.600, -36.800],
            [57.600, -36.800],
            [56.871, -30.945],
            [55.552, -28.253],
            [59.006, 7.368],
            [59.907, 7.524],
            [69.569, 24.946],
            [69.336, 25.712],
            [59.344, 25.712],
            [58.703, 25.354],
            [58.703, 7.368],
            [55.246, -27.628],
        ]);
    }
}

module glyph_S() {
    union() {
        polygon(points = [
            [53.341, -28.616],
            [58.429, -20.896],
            [61.319, -17.267],
            [61.384, -13.579],
            [61.660, -12.732],
            [63.512, -9.519],
            [68.608, -2.920],
            [57.624, 5.510],
            [56.800, 5.816],
            [54.016, 5.816],
            [52.897, 8.206],
            [49.158, 10.952],
            [48.755, 11.675],
            [48.780, 14.448],
            [65.216, 30.815],
            [66.503, 33.267],
            [80.184, 33.180],
            [76.131, 19.010],
            [75.203, 19.010],
            [73.724, 23.309],
            [72.386, 24.594],
            [71.685, 24.550],
            [71.316, 23.768],
            [61.776, 13.636],
            [61.814, 13.009],
            [74.894, 2.626],
            [75.679, -0.923],
            [77.963, -4.947],
            [77.734, -5.718],
            [61.934, -28.630],
            [60.649, -29.969],
            [56.467, -31.868],
            [54.551, -34.915],
            [49.319, -36.607],
            [49.572, -33.905],
            [52.802, -29.371],
            [53.341, -28.616],
        ]);
    }
}

module glyph_T() {
    union() {
        polygon(points = [
            [65.864, -28.827],
            [61.961, -24.296],
            [61.354, 19.540],
            [59.026, 20.760],
            [58.556, 22.697],
            [51.533, 29.744],
            [51.832, 30.448],
            [52.686, 30.792],
            [77.605, 30.792],
            [78.000, 30.190],
            [78.000, 28.197],
            [77.501, 27.446],
            [74.483, 24.899],
            [73.571, 23.126],
            [72.761, 22.820],
            [70.950, 23.249],
            [70.517, 22.430],
            [69.907, -36.356],
            [69.202, -36.680],
            [66.588, -33.758],
            [66.009, -29.813],
            [65.864, -28.827],
        ]);
    }
}

module glyph_U() {
    union() {
        polygon(points = [
            [59.056, -33.554],
            [57.080, -31.373],
            [57.051, -22.392],
            [53.486, -20.578],
            [53.051, -19.841],
            [52.505, 18.151],
            [52.342, 19.087],
            [49.549, 21.923],
            [48.512, 24.694],
            [49.294, 25.218],
            [61.102, 25.027],
            [61.102, -24.968],
            [61.841, -25.229],
            [62.827, -25.197],
            [66.362, -21.662],
            [69.318, -17.644],
            [72.117, -14.787],
            [72.532, -13.957],
            [72.532, 19.040],
            [72.153, 19.883],
            [70.169, 22.088],
            [69.043, 24.859],
            [69.460, 25.218],
            [80.459, 25.218],
            [80.988, 24.758],
            [80.014, -19.227],
            [70.399, -31.978],
            [68.491, -32.101],
            [66.608, -31.579],
            [64.759, -31.943],
            [59.742, -36.729],
            [58.165, -36.419],
            [58.759, -34.509],
            [59.056, -33.554],
        ]);
    }
}

module glyph_V() {
    union() {
        polygon(points = [
            [65.406, -31.226],
            [63.290, -29.111],
            [62.776, -26.329],
            [60.691, -24.183],
            [56.901, -2.578],
            [54.773, 4.062],
            [52.766, 15.855],
            [51.012, 19.423],
            [50.849, 22.348],
            [49.439, 23.758],
            [49.582, 24.442],
            [59.555, 24.442],
            [63.537, -2.128],
            [64.782, -3.635],
            [65.200, -3.494],
            [68.971, 21.151],
            [68.897, 22.084],
            [67.350, 24.442],
            [79.164, 24.289],
            [79.164, 21.297],
            [76.969, 18.035],
            [76.767, 17.070],
            [68.357, -36.123],
            [68.059, -36.941],
            [67.083, -36.908],
            [65.898, -34.177],
            [65.570, -32.210],
            [65.406, -31.226],
        ]);
    }
}

module glyph_W() {
    union() {
        polygon(points = [
            [56.022, -30.662],
            [53.902, -28.542],
            [53.708, -26.614],
            [51.397, -23.382],
            [48.532, -5.655],
            [45.737, 2.886],
            [44.333, 12.779],
            [42.571, 16.357],
            [42.334, 19.298],
            [40.663, 21.642],
            [41.438, 22.185],
            [50.431, 22.185],
            [53.999, -1.453],
            [54.927, -4.304],
            [55.816, -4.380],
            [59.410, 19.331],
            [59.098, 20.167],
            [57.685, 21.580],
            [57.899, 21.989],
            [61.852, 22.537],
            [68.847, 22.537],
            [70.409, 21.485],
            [74.052, -3.202],
            [74.630, -3.973],
            [75.336, -4.150],
            [75.724, -3.282],
            [79.234, 19.430],
            [77.694, 22.001],
            [78.245, 22.255],
            [88.237, 22.255],
            [88.830, 21.849],
            [88.676, 18.895],
            [86.297, 14.547],
            [85.298, 6.616],
            [78.551, -35.818],
            [77.891, -36.533],
            [77.383, -35.936],
            [76.122, -33.231],
            [75.730, -31.271],
            [73.927, -28.966],
            [73.183, -26.087],
            [71.332, -23.814],
            [68.046, -4.101],
            [65.145, 3.333],
            [58.769, -35.668],
            [58.494, -36.518],
            [57.601, -36.262],
            [56.894, -35.556],
            [56.181, -31.648],
            [56.022, -30.662],
        ]);
    }
}

module glyph_Y() {
    union() {
        polygon(points = [
            [65.512, -30.379],
            [62.526, -26.378],
            [62.180, -25.489],
            [61.644, -9.522],
            [57.719, 5.956],
            [55.322, 11.440],
            [53.401, 19.192],
            [51.259, 22.530],
            [51.259, 23.528],
            [51.000, 24.419],
            [50.294, 25.125],
            [50.333, 25.853],
            [59.315, 25.841],
            [60.021, 25.135],
            [60.505, 24.313],
            [64.028, 7.713],
            [65.237, 6.180],
            [65.738, 6.133],
            [69.542, 23.658],
            [68.130, 25.070],
            [68.397, 25.776],
            [79.349, 25.853],
            [79.975, 25.482],
            [79.975, 24.483],
            [79.572, 23.618],
            [77.259, 20.383],
            [69.117, -15.651],
            [69.039, -36.611],
            [68.089, -36.659],
            [67.496, -35.951],
            [66.123, -33.312],
            [65.715, -31.357],
            [65.512, -30.379],
        ]);
    }
}

module glyph_Z() {
    union() {
        polygon(points = [
            [53.694, -32.708],
            [57.518, -19.302],
            [58.307, -15.398],
            [68.366, 19.009],
            [68.030, 19.503],
            [62.055, 19.503],
            [57.622, 17.564],
            [56.687, 15.805],
            [55.538, 11.999],
            [54.951, 11.460],
            [54.405, 12.082],
            [50.960, 22.480],
            [50.801, 25.441],
            [51.455, 25.783],
            [63.404, 25.783],
            [67.343, 25.236],
            [69.241, 25.783],
            [79.199, 25.783],
            [79.996, 25.303],
            [78.771, 21.610],
            [76.413, 18.400],
            [74.391, 10.704],
            [70.684, -0.655],
            [63.230, -27.519],
            [77.120, -27.557],
            [77.844, -28.213],
            [78.090, -28.920],
            [75.990, -31.014],
            [72.006, -31.014],
            [66.973, -34.159],
            [63.063, -34.401],
            [60.366, -35.601],
            [58.422, -35.805],
            [56.630, -36.674],
            [53.694, -36.691],
            [53.694, -33.704],
            [53.694, -32.708],
        ]);
    }
}

module glyph_K() {
    union() {
        polygon(points = [
            [54.293, -27.557],
            [53.218, -24.789],
            [51.104, -22.674],
            [50.829, -21.788],
            [50.277, 27.051],
            [49.963, 27.942],
            [48.736, 29.513],
            [47.154, 33.147],
            [56.936, 33.262],
            [57.680, 33.009],
            [57.680, 8.089],
            [58.026, 7.438],
            [58.942, 7.567],
            [67.668, 23.229],
            [71.015, 28.185],
            [70.450, 31.040],
            [69.662, 32.862],
            [70.013, 33.262],
            [79.981, 33.262],
            [80.074, 32.664],
            [74.298, 18.874],
            [70.293, 10.847],
            [68.284, 4.223],
            [81.178, -31.392],
            [81.245, -32.377],
            [80.579, -32.708],
            [79.656, -32.562],
            [77.296, -29.348],
            [75.650, -25.754],
            [69.865, -21.852],
            [61.163, -0.670],
            [58.967, 3.803],
            [58.081, 3.981],
            [57.680, 3.385],
            [57.680, -36.486],
            [56.926, -36.729],
            [56.490, -36.111],
            [56.000, -31.151],
            [54.732, -28.452],
            [54.293, -27.557],
        ]);
    }
}

module glyph_X() {
    union() {
        polygon(points = [
            [75.425, -30.450],
            [69.157, -24.043],
            [64.920, -9.676],
            [64.478, -8.931],
            [63.480, -8.931],
            [62.912, -9.503],
            [55.442, -35.410],
            [53.409, -33.622],
            [53.319, -26.665],
            [51.647, -23.058],
            [51.729, -20.074],
            [57.207, -0.868],
            [57.362, 5.102],
            [57.274, 6.082],
            [54.431, 12.465],
            [52.513, 20.214],
            [50.825, 22.689],
            [50.448, 24.570],
            [49.319, 26.100],
            [49.788, 26.630],
            [57.777, 26.630],
            [58.692, 26.429],
            [59.398, 25.722],
            [63.281, 8.254],
            [64.611, 6.772],
            [64.978, 7.165],
            [68.495, 23.773],
            [68.480, 24.684],
            [67.131, 26.097],
            [67.909, 26.630],
            [78.893, 26.630],
            [79.164, 24.903],
            [78.834, 24.041],
            [76.750, 21.904],
            [71.426, -1.464],
            [72.203, -6.362],
            [73.471, -10.148],
            [79.729, -35.345],
            [79.398, -37.012],
            [78.623, -36.471],
            [76.688, -34.239],
            [75.740, -31.397],
            [75.425, -30.450],
        ]);
    }
}

module glyph_apostrophe() {
    union() {
    rotate([0, 0, 45]){
        translate([-15, 60, 0]){
        polygon(points = [
            [68.948, -32.462],
            [67.485, -52.158],
            [66.731, -52.409],
            [62.781, -52.409],
            [61.318, -32.713],
            [62.035, -32.462],
            [67.960, -32.462],
            [68.948, -32.462],
        ]);
        }
    }
    }
}

module glyph_space() {
    union() {
        translate([-35, -35, 0]){
        polygon(points = [
            [53.058, 0.312],
            [53.200, 4.259],
            [58.278, 8.418],
            [57.620, 8.630],
            [55.089, 8.365],
            [53.954, 7.730],
            [44.080, -0.714],
            [42.594, -2.209],
            [41.891, -3.588],
            [41.682, -8.473],
            [42.347, -15.007],
            [43.636, -20.932],
            [45.791, -27.667],
            [45.551, -27.803],
            [44.961, -27.174],
            [41.518, -18.582],
            [39.807, -13.197],
            [38.910, -8.487],
            [38.600, -4.083],
            [38.818, -0.201],
            [40.947, 0.012],
            [43.960, 1.816],
            [46.755, 3.982],
            [53.886, 10.498],
            [55.101, 10.850],
            [58.197, 10.986],
            [58.765, 11.425],
            [58.181, 12.004],
            [56.879, 12.294],
            [52.460, 12.035],
            [48.708, 11.012],
            [44.266, 9.132],
            [42.391, 10.152],
            [41.042, 11.921],
            [41.910, 17.182],
            [43.509, 22.949],
            [45.784, 28.554],
            [48.914, 34.480],
            [49.218, 34.038],
            [46.700, 27.926],
            [45.044, 22.097],
            [44.379, 16.887],
            [44.463, 12.087],
            [48.343, 12.752],
            [54.783, 14.412],
            [58.984, 13.993],
            [58.461, 15.144],
            [57.286, 15.656],
            [49.036, 15.034],
            [47.897, 15.704],
            [47.234, 16.850],
            [47.453, 19.778],
            [48.469, 23.669],
            [52.911, 34.572],
            [53.200, 33.792],
            [50.568, 23.581],
            [50.364, 17.462],
            [58.601, 17.378],
            [60.880, 15.290],
            [62.987, 16.747],
            [63.093, 15.188],
            [64.466, 14.988],
            [65.757, 15.290],
            [65.854, 16.722],
            [66.702, 16.506],
            [67.230, 15.771],
            [68.049, 15.651],
            [70.043, 17.370],
            [78.294, 17.575],
            [78.439, 20.155],
            [78.115, 23.635],
            [75.595, 33.877],
            [75.795, 34.589],
            [78.674, 27.747],
            [80.779, 21.013],
            [81.704, 16.763],
            [79.814, 14.988],
            [71.991, 15.682],
            [70.272, 15.135],
            [69.641, 14.088],
            [70.417, 13.860],
            [72.915, 14.590],
            [84.035, 12.025],
            [84.661, 12.440],
            [83.676, 21.181],
            [82.452, 26.254],
            [79.658, 34.542],
            [80.212, 34.150],
            [82.039, 30.687],
            [85.797, 22.257],
            [87.346, 16.315],
            [87.631, 11.973],
            [84.912, 9.190],
            [79.610, 11.203],
            [75.913, 12.109],
            [71.443, 12.172],
            [70.561, 11.928],
            [70.134, 11.320],
            [70.788, 10.804],
            [75.153, 10.454],
            [81.264, 4.824],
            [87.727, 0.295],
            [89.830, -0.174],
            [90.030, -0.537],
            [89.879, -7.230],
            [89.054, -12.372],
            [85.560, -23.125],
            [83.594, -27.073],
            [83.468, -26.523],
            [85.267, -20.591],
            [86.490, -14.220],
            [86.989, -8.994],
            [86.988, -3.690],
            [86.519, -2.612],
            [83.275, 0.597],
            [74.916, 7.608],
            [72.916, 8.482],
            [70.754, 8.636],
            [70.403, 8.370],
            [73.974, 5.438],
            [75.448, 4.693],
            [75.242, -9.742],
            [74.342, -18.471],
            [72.984, -24.902],
            [70.555, -31.919],
            [68.983, -35.088],
            [68.298, -35.517],
            [70.707, -27.116],
            [71.900, -19.756],
            [72.437, -9.686],
            [72.304, 3.279],
            [70.082, 6.147],
            [68.978, 7.024],
            [68.370, 7.108],
            [68.998, 4.158],
            [68.457, -1.044],
            [65.367, -10.235],
            [64.393, -10.900],
            [63.413, -10.073],
            [62.270, -7.688],
            [60.478, -1.327],
            [59.691, 3.859],
            [60.369, 6.377],
            [60.326, 7.279],
            [57.763, 5.157],
            [56.201, 2.968],
            [56.515, 0.922],
            [56.210, -10.519],
            [56.867, -20.120],
            [57.999, -26.946],
            [60.460, -35.326],
            [59.554, -34.657],
            [57.264, -29.944],
            [56.085, -26.615],
            [54.808, -21.513],
            [53.382, -11.531],
            [53.059, -0.117],
            [53.058, 0.312],
        ]*2);
        }
    }
}
module glyph_2() {
    union() {
        polygon(points = [
            [60.396, -11.188],
            [59.637, -9.220],
            [58.638, -9.154],
            [54.837, -11.192],
            [52.704, -13.344],
            [51.355, -32.335],
            [50.632, -34.302],
            [49.998, -34.763],
            [49.207, -34.759],
            [48.472, -34.289],
            [48.535, -29.314],
            [50.104, -11.381],
            [50.774, -10.342],
            [51.767, -9.621],
            [57.352, -7.686],
            [58.470, -6.625],
            [57.881, -5.614],
            [57.463, -5.614],
            [45.861, -8.332],
            [45.323, -9.467],
            [45.089, -11.086],
            [44.617, -21.321],
            [44.058, -26.357],
            [42.906, -30.005],
            [42.195, -30.820],
            [41.632, -30.495],
            [41.768, -25.437],
            [42.677, -16.301],
            [42.167, -5.947],
            [43.186, -5.211],
            [45.097, -4.743],
            [52.781, -4.053],
            [56.138, -3.397],
            [58.287, -2.324],
            [58.914, -0.889],
            [58.536, -0.454],
            [56.911, 0.167],
            [46.289, 3.464],
            [43.821, 4.963],
            [43.128, 21.057],
            [43.725, 21.454],
            [44.993, 21.197],
            [45.911, 19.449],
            [46.305, 16.508],
            [46.520, 9.290],
            [47.291, 6.919],
            [50.443, 5.063],
            [58.981, 1.677],
            [59.435, 2.318],
            [59.424, 3.565],
            [58.468, 5.334],
            [56.085, 7.040],
            [51.540, 9.392],
            [50.491, 10.627],
            [50.516, 11.804],
            [50.942, 12.853],
            [51.083, 16.696],
            [50.543, 27.975],
            [50.730, 31.649],
            [51.527, 31.921],
            [52.260, 31.637],
            [52.893, 30.576],
            [53.276, 28.904],
            [53.552, 20.564],
            [53.411, 14.218],
            [53.062, 12.452],
            [60.487, 7.579],
            [62.725, 10.414],
            [63.791, 10.988],
            [65.081, 11.178],
            [66.419, 11.010],
            [67.447, 10.455],
            [69.532, 7.590],
            [77.180, 12.685],
            [76.695, 14.324],
            [76.748, 28.524],
            [77.545, 31.330],
            [78.180, 31.850],
            [79.436, 31.686],
            [79.565, 28.063],
            [79.023, 16.011],
            [79.164, 12.602],
            [79.573, 11.862],
            [79.631, 10.698],
            [78.657, 9.453],
            [74.119, 7.075],
            [71.729, 5.354],
            [70.856, 3.988],
            [70.738, 2.347],
            [71.165, 1.690],
            [71.521, 1.772],
            [79.334, 4.904],
            [82.859, 6.942],
            [83.668, 9.717],
            [83.876, 16.941],
            [84.290, 19.866],
            [84.812, 20.932],
            [85.458, 21.389],
            [86.377, 21.454],
            [86.977, 21.059],
            [86.428, 4.967],
            [85.457, 4.146],
            [83.571, 3.314],
            [73.366, 0.190],
            [71.262, -0.816],
            [71.827, -2.294],
            [73.978, -3.390],
            [77.301, -4.050],
            [85.000, -4.743],
            [86.907, -5.234],
            [87.940, -5.991],
            [87.443, -16.728],
            [88.688, -29.088],
            [88.549, -30.463],
            [87.950, -30.851],
            [87.648, -30.610],
            [86.744, -29.195],
            [86.068, -26.788],
            [85.013, -10.482],
            [84.572, -8.943],
            [82.499, -7.918],
            [72.219, -5.669],
            [71.756, -6.361],
            [72.234, -7.375],
            [78.570, -9.767],
            [79.526, -10.562],
            [80.084, -11.654],
            [81.429, -26.677],
            [81.634, -34.148],
            [80.677, -34.823],
            [79.879, -34.643],
            [78.811, -32.916],
            [77.465, -13.469],
            [76.068, -11.811],
            [74.348, -10.550],
            [72.020, -9.321],
            [70.950, -9.076],
            [70.014, -9.801],
            [69.776, -11.851],
            [72.798, -16.838],
            [73.234, -18.428],
            [73.237, -30.558],
            [72.854, -32.651],
            [72.044, -34.031],
            [70.851, -35.186],
            [69.438, -36.016],
            [67.402, -36.641],
            [63.265, -36.732],
            [59.729, -35.502],
            [57.876, -33.843],
            [56.958, -31.634],
            [56.868, -18.596],
            [57.233, -16.988],
            [59.981, -12.779],
            [60.370, -11.605],
            [60.396, -11.188],
        ]);
    }
}


// parametres of the brim
brim_width_val = 0;
brim_height_val = 0;
// --------------------------- METADATA ------------------------------
// Dictionary to associate glyph name with its width in "glyph units"
// These values are used to calculate horizontal spacing.
glyph_metadata = [
    ["A", 36.135], ["B", 35.449], ["C", 35.639], ["D", 35.938], ["E", 34.082], ["F", 36.849], ["G", 35.938], ["H", 37.450], ["I", 22.938], ["J", 31.671],
    ["K", 35.669], ["L", 31.669], ["M", 35.121], ["N", 35.634], ["O", 35.892], ["P", 35.976], ["Q", 36.038], ["R", 35.665], ["S", 35.183], ["T", 35.391],
    ["U", 35.947], ["V", 35.484], ["W", 35.826], ["X", 35.805], ["Y", 35.417], ["Z", 35.326], ["'", 0], ["-", 40.972], [" ", 35.396]
];


// Function to obtain width of glyph
function get_glyph_width(name) =
    let(found = [for (i = [0:len(glyph_metadata)-1]) if (glyph_metadata[i][0] == name) glyph_metadata[i][1]])
    len(found) > 0 ? found[0] : 40;

// --------------------------- HELPERS ------------------------------
// Function to sum an array recursively
function sum(v, i = 0) = i >= len(v) ? 0 : v[i] + sum(v, i + 1);
//Module to place a glyph in 3D with extrusion, add new glyphs here
module place_glyph(name, x, scale_factor = 1, thickness = 10) {
    translate([x, 0, 0]) 
    scale([scale_factor, scale_factor, 1]) 
    linear_extrude(height = thickness) {
        if (name == "A") glyph_A();
        else if (name == "B") glyph_B();
        else if (name == "C") glyph_C();
        else if (name == "D") glyph_D();
        else if (name == "E") glyph_E();
        else if (name == "F") glyph_F();
        else if (name == "G") glyph_G();
        else if (name == "H") glyph_H();
        else if (name == "I") glyph_I();
        else if (name == "J") glyph_J();
        else if (name == "K") glyph_K();
        else if (name == "L") glyph_L();
        else if (name == "M") glyph_M();
        else if (name == "N") glyph_N();
        else if (name == "O") glyph_O();
        else if (name == "P") glyph_P();
        else if (name == "Q") glyph_Q();
        else if (name == "R") glyph_R();
        else if (name == "S") glyph_S();
        else if (name == "T") glyph_T();
        else if (name == "U") glyph_U();
        else if (name == "V") glyph_V();
        else if (name == "W") glyph_W();
        else if (name == "X") glyph_X();
        else if (name == "Y") glyph_Y();
        else if (name == "Z") glyph_Z();
        else if (name == "'") glyph_apostrophe();
        else if (name == "-") glyph_space();
        else if (name == " ") glyph_2();    
        else {
            echo(str("Error: glyph not found ", name));
            square(size = 100); // placeholder per glifi non definiti
        }
    }
}

// Module that positions the glyphs in 2D (without extrusion) - used for outline + brim add new glyphs here
module place_glyph_2d(name, x, scale_factor = 1) {
    translate([x, 0, 0])
    scale([scale_factor, scale_factor, 1]) {
        if (name == "A") glyph_A();
        else if (name == "B") glyph_B();
        else if (name == "C") glyph_C();
        else if (name == "D") glyph_D();
        else if (name == "E") glyph_E();
        else if (name == "F") glyph_F();
        else if (name == "G") glyph_G();
        else if (name == "H") glyph_H();
        else if (name == "I") glyph_I();
        else if (name == "J") glyph_J();
        else if (name == "K") glyph_K();
        else if (name == "L") glyph_L();
        else if (name == "M") glyph_M();
        else if (name == "N") glyph_N();
        else if (name == "O") glyph_O();
        else if (name == "P") glyph_P();
        else if (name == "Q") glyph_Q();
        else if (name == "R") glyph_R();
        else if (name == "S") glyph_S();
        else if (name == "T") glyph_T();
        else if (name == "U") glyph_U();
        else if (name == "V") glyph_V();
        else if (name == "W") glyph_W();
        else if (name == "X") glyph_X();
        else if (name == "Y") glyph_Y();
        else if (name == "Z") glyph_Z();
        else if (name == "'") glyph_apostrophe();
        else if (name == "-") glyph_space();
        else if (name == " ") glyph_2();
        else {
            // placeholder visibile per debug
            square([get_glyph_width(name)*scale_factor, get_glyph_width(name)*scale_factor]);
        }
    }
}
// Seconda parola costante
word2 = "SPIDER-";
// --- Calculate total string width (in mm units, given scale_factor) ---
function total_text_width(text, scale_factor, spacing) =
    let(
        n = len(text),
        widths = [ for (i=[0:n-1]) get_glyph_width(text[i]) * scale_factor ]
    )
    sum(widths) + (n > 1 ? spacing * (n - 1) : 0);

// --- compose_text_2d in the origin (0,0) ---
module compose_text_2d(text, scale_factor = 1, spacing = 2) {
    union() {
        total = total_text_width(text, scale_factor, spacing);
        start_x = -1.5*total / 2; // first position for centering the text

        positions = [
            for (i = [0:len(text)-1])
                [ text[i],
                  start_x
                  + ( i == 0 ? 0 : sum([ for (j = [0:i-1]) get_glyph_width(text[j]) * scale_factor ]) )
                  + spacing * i
                ]
        ];

        for (pos = positions) {
            place_glyph_2d(pos[0], pos[1], scale_factor);
        }
    }
}

// --- draw_centered_string: in origin ---
module draw_centered_string(text, scale_factor = 1, spacing = 2, thickness = 10) {
    total = total_text_width(text, scale_factor, spacing);
    start_x = -total / 2;

    for (i = [0:len(text)-1]) {
        xoff = start_x
               + ( i == 0 ? 0 : sum([ for (j = [0:i-1]) get_glyph_width(text[j]) * scale_factor ]) )
               + spacing * i;
        place_glyph(text[i], xoff, scale_factor, thickness);
    }
}


// ---------- COLORS and FLAGS ----------
brim_color    = "red"; 
outline_color = "red";  
letter_color  = "yellow";  

show_brim     = true;
show_outline  = true;
show_letters  = true;


module draw_with_outline_and_brim(text,
                            scale_factor = 0.01,
                            spacing = 5,
                            thickness = 10,
                            outline_thickness = 2,
                            outline_height = 12,
                            brim_width = 3,
                            brim_height = 1,
                            top_cap_thickness = 0.6,  
                            top_shrink = 0.004,        
                            $fn_outline = 32)
{
    if (len(text) == 0) return();

    // piccolo offset per evitare Z-fighting
    tiny = 0.01;

    // 1) BRIM (base) - NERO
    if (show_brim) {
        color(brim_color) // assicurati brim_color = "black"
            translate([0,0,-tiny])
                linear_extrude(height = brim_height, center = false, convexity = 10)
                    difference() {
                        minkowski() {
                            compose_text_2d(text, scale_factor, spacing);
                            circle(r = brim_width, $fn = $fn_outline);
                        }
                        compose_text_2d(text, scale_factor, spacing);
                    }

    }

    // 2) OUTLINE (anello) - NERO (stesso livello delle lettere)
    if (show_outline) {
        color(outline_color) // assicurati outline_color = "black"
            translate([0,0, brim_height])
                linear_extrude(height = outline_height, center = false, convexity = 10)
                    difference() {
                        minkowski() {
                            compose_text_2d(text, scale_factor, spacing);
                            circle(r = outline_thickness, $fn = $fn_outline);
                        }
                        compose_text_2d(text, scale_factor, spacing);
                    }
            color("black") // contorno nero
                translate([0,0, brim_height + thickness - top_cap_thickness + tiny])
                    linear_extrude(height = top_cap_thickness - letter_height_val, center = false, convexity = 10)
                        difference() {
                            minkowski() {
                                scale([1 - top_shrink_val, 1 - top_shrink_val, 1])
                                    compose_text_2d(text, scale_factor, spacing);
                                circle(r = 1, $fn = $fn_outline); // circle piccolo per contorno sottile
                            }
                            scale([1 - top_shrink_val, 1 - top_shrink_val, 1])
                                compose_text_2d(text, scale_factor, spacing);
                        }
    }

    // 3) LETTERA (LATI) - NERO: estrusione completa nera posizionata sopra il brim
    //    (questa fornisce i lati / retro neri)
    if (show_letters) {
        color("red") // assicurati "black"
            translate([0,0, brim_height])
                linear_extrude(height = thickness, center = false, convexity = 10)
                    compose_text_2d(text, scale_factor, spacing);
    }

    // 4) TOP CAP (VERDE): un piccolo "coperchio" verde posizionato in cima alla lettera
    //    lo shrinkiamo leggermente in XY così il bordo laterale nero resta visibile.
    if (show_letters) {
        // Se vuoi che la cappa copra esattamente fino ai bordi, imposta top_shrink = 0
        
        top_shrink_val = clamp(top_shrink, 0, 0.05); // limitiamo il valore per sicurezza

        color("yellow") // cappa verde (puoi usare letter_color_top var se preferisci)
            translate([0,0, brim_height + thickness - top_cap_thickness + tiny])
                linear_extrude(height = top_cap_thickness - letter_height_val, center = false, convexity = 10)
                    scale([1 - top_shrink_val, 1 - top_shrink_val, 1])
                        compose_text_2d(text, scale_factor, spacing);
    }
}



draw_with_outline_and_brim(word,
                    scale_factor = scale_factor,
                    spacing = spacing,
                    thickness = thickness,
                    outline_thickness = outline_thickness_val,
                    outline_height = outline_height_val,
                    brim_width = brim_width_val,
                    brim_height = brim_height_val,
                    $fn_outline = 32);

// Seconda parola
if (len(word2) - 1 > len(word)){
    translate([25, 60, 0]){
    draw_with_outline_and_brim(word2,
                        scale_factor = scale_factor,
                        spacing = spacing,
                        thickness = thickness,
                        outline_thickness = outline_thickness_val,
                        outline_height = outline_height_val,
                        brim_width = brim_width_val,
                        brim_height = brim_height_val,
                        $fn_outline = 32);
}
}
else {
   translate([35, 60, 0]){
    draw_with_outline_and_brim(word2,
                        scale_factor = scale_factor,
                        spacing = spacing,
                        thickness = thickness,
                        outline_thickness = outline_thickness_val,
                        outline_height = outline_height_val,
                        brim_width = brim_width_val,
                        brim_height = brim_height_val,
                        $fn_outline = 32);
} 
}



// Without color
// module draw_with_outline_and_brim(text,
//                                  scale_factor = 0.01,
//                                  spacing = 5,
//                                  thickness = 10,
//                                  outline_thickness = 2,
//                                  outline_height = 12,
//                                  brim_width = 3,
//                                  brim_height = 1,
//                                  $fn_outline = 64)
// {
//     
//     if (len(text) > 0) {
//         union() {
//             
//             linear_extrude(height = outline_height, center = false, convexity = 10)
//                 difference() {
//                     // expanded (outer)
//                     minkowski() {
//                         compose_text_2d(text, scale_factor, spacing);
//                         circle(r = outline_thickness, $fn = $fn_outline);
//                     }
//                    
//                     compose_text_2d(text, scale_factor, spacing);
//                 }

//            
//             linear_extrude(height = thickness, center = false, convexity = 10)
//                 compose_text_2d(text, scale_factor, spacing);

//             
//           
//             translate([0,0, -0.01])
//                 linear_extrude(height = brim_height, center = false, convexity = 10)
//                     difference() {
//                         minkowski() {
//                             compose_text_2d(text, scale_factor, spacing);
//                             circle(r = brim_width, $fn = $fn_outline);
//                         }
//                         
//                         compose_text_2d(text, scale_factor, spacing);
//                     }
//         }
//     } // end if(len(text) > 0)
// }



// // Final call
// draw_with_outline_and_brim(word,
//                           scale_factor = scale_factor,
//                           spacing = spacing,
//                           thickness = thickness,
//                           outline_thickness = outline_thickness_val,
//                           outline_height = outline_height_val,
//                           brim_width = brim_width_val,
//                           brim_height = brim_height_val,
//                           $fn_outline = 64);



// // End of file
